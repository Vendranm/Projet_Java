package pkg_Command;import java.util.HashMap;import java.util.Iterator;public class CommandWords{    private HashMap<String, CommandWord> aValidCommands;    /**     * Constructeur par defaut     */    public CommandWords()    {       aValidCommands = new HashMap<String, CommandWord>();       for(CommandWord vCommand : CommandWord.values())        {            if(vCommand != CommandWord.UNKNOWN)             {                aValidCommands.put(vCommand.toString(), vCommand);            }        }    } // CommandWords()        public CommandWord getCommandWord(String pCommandWord)    {        CommandWord vCommand = aValidCommands.get(pCommandWord);        if(vCommand != null)         {            return vCommand;        }        else        {            return CommandWord.UNKNOWN;        }    }        boolean isCommand( final String pString )    {        return aValidCommands.containsKey(pString);    } // isCommand()        public String showAll()     {        String vReturnString="";        for(String vCommand : aValidCommands.keySet())         {            vReturnString+=vCommand + ", ";        }        return vReturnString;    }        public Command getCommand(final String pCommandWord)    {        return this.getCommandWord(pCommandWord).getCommand();    }} // CommandWords