package pkg_Command;import java.util.StringTokenizer;/** * This class is the main class of the "World of Zuul" application.  * "World of Zuul" is a very simple, text based adventure game.   * * This parser reads user input and tries to interpret it as an "Adventure" * command. Every time it is called it reads a line from the terminal and * tries to interpret the line as a two word command. It returns the command * as an object of class Command. * * The parser has a set of known command words. It checks user input against * the known commands, and if the input is not one of the known commands, it * returns a command object that is marked as an unknown command. *  * @author  Michael Kolling and David J. Barnes * @version 2011.07.31 */public class Parser {    private CommandWords aValidsCommand;  // (voir la classe CommandWords)    /**     * Constructeur par defaut d'un Parser pour lire ce que l'on tape sur le terminal      */    public Parser()     {        this.aValidsCommand = new CommandWords();    } // Parser()    /**     * @return The next command from the user.     */    public Command getCommand(final String inputLine)     {        //         String vInputLine;    // contiendra toute la ligne tapee        String word1;        String word2;        StringTokenizer tokenizer = new StringTokenizer(inputLine);        if(tokenizer.hasMoreTokens())            word1 = tokenizer.nextToken();      // get first word        else            word1 = null;        if(tokenizer.hasMoreTokens())            word2 = tokenizer.nextToken();      // get second word        else            word2 = null;        // note: we just ignore the rest of the input line.        // Now check whether this word is known. If so, create a command        // with it. If not, create a "null" command (for unknown command).        Command vCommand = this.aValidsCommand.getCommand(word1);        if(vCommand != null)        {            vCommand.setSecondWord(word2);        }        return vCommand;    } // getCommand()    /**     * Affiche une liste de commandes valides.     */    public String showCommands ()    {         return this.aValidsCommand.showAll();    }}